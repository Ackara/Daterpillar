<#@ template hostspecific="true" language="C#" #>
<#@ assembly name="$(TargetDir)\Ackara.Daterpillar.Core.dll" #>
<#@ assembly name="System.Reflection" #>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.IO" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Ackara.Daterpillar.Transformation" #>
<#@ import namespace="Ackara.Daterpillar.Transformation.Template" #>
<#@ output extension=".txt" #>
<# 
	/* *** INSTRUCTIONS *** */
#>
-- -----------------------------------
-- SCHEMA:		beta corp llc
-- AUTHOR:		john@example.com
-- VERSION:		1.0.0.0
-- GENERATED:	<#= DateTime.Now.ToString("MMM dd, yyyy") #>
-- -----------------------------------

<# 
	/* *** INSTRUCTIONS *** */
	// Provide the path to the schema document you wish to transform.
	// Below are some examples of how a dynamic path can be constructed.

	// string schemaPath = Path.Combine(Host.ResolveAssemblyReference("$(TargetDir)"), "schema.xml");
	// string schemaPath = Path.Combine(Host.ResolveAssemblyReference("$(SolutionDir)"), "schema.xml");
	string schemaPath = Path.Combine(Host.ResolveAssemblyReference("$(ProjectDir)"), "T4 Template", "schema.xml");
	
	var schema = Schema.Load(File.OpenRead(schemaPath));
	var template = new SQLiteTemplate();

	string sqlite = template.Transform(schema);
	WriteLine(sqlite);
#>